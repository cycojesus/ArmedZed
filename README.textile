Leveraging on "ArmedSlack":http://www.armedslack.org and inspired by "Zubuntu":http://www.omegamoon.com/blog// here I'll try to get the almighty Slackware running on Sharp's Zaurus (SL-6000L (tosa) specifically as it's the only one I have handy).

In here will be found SlackBuilds scripts to generate necessary packages, configuration files and various scripts and stuff.

-------------------------------------

h2. Blockers :(

h6. tosa-idiosyncrasies
* /etc/X11/xinit/.Xmodmap has no effect

h6. suspend doesn't seem to work

h6. links
* http://ftp.penguin.cz/pub/users/utx/zaurus/files/xserver-xorg/etc/X11/

-------------------------------------

h3. Todo

* Apparently tslib doesn't like chvt (switching from X to consle) and therefore exiting X sometimes hang the Z ( http://www.mail-archive.com/zaurus-devel@lists.linuxtogo.org/msg00087.html ).
** try xf86-input-evtouch or xf86-input-plpevtch instead
* ohci doesn't like to suspend
** try a kernel without it

-------------------------------------

h3. Armedslack-current on a Tosa, How?

* download and flash a kexecboot kernel
** take the installkit-tosa.tar.gz from zaurus linux-kexecboot-2.6.2x http://projects.linuxtogo.org/frs/?group_id=55
** (you can also build one through OE if you have time and disk-space...)
* mount $CARD $ROOT
* cd $ROOT
* tar xf /armedslack-devtools/minirootfs/roots/slack-current-miniroot_*.tar.bz2
* get a kernel > 2.6.31
** on a Slackware system you can use cross-compiling-SlackBuilds/crossed-linux/ to cross-compile a kernel
** otherwise you can make your own:
$ ls $CWD/armv5te/bin
arm-angstrom-linux-gnueabi-addr2line
arm-angstrom-linux-gnueabi-ar
arm-angstrom-linux-gnueabi-as
arm-angstrom-linux-gnueabi-c++
arm-angstrom-linux-gnueabi-c++filt
arm-angstrom-linux-gnueabi-cpp
arm-angstrom-linux-gnueabi-depmod-2.6
arm-angstrom-linux-gnueabi-g++
arm-angstrom-linux-gnueabi-g77
arm-angstrom-linux-gnueabi-gcc
arm-angstrom-linux-gnueabi-gcc-4.3.3
arm-angstrom-linux-gnueabi-gccbug
arm-angstrom-linux-gnueabi-gcov
arm-angstrom-linux-gnueabi-generate-modprobe.conf
arm-angstrom-linux-gnueabi-gfortran
arm-angstrom-linux-gnueabi-gprof
arm-angstrom-linux-gnueabi-insmod
arm-angstrom-linux-gnueabi-insmod.static
arm-angstrom-linux-gnueabi-klcc
arm-angstrom-linux-gnueabi-ld
arm-angstrom-linux-gnueabi-lsmod
arm-angstrom-linux-gnueabi-modinfo
arm-angstrom-linux-gnueabi-modprobe
arm-angstrom-linux-gnueabi-nm
arm-angstrom-linux-gnueabi-objcopy
arm-angstrom-linux-gnueabi-objdump
arm-angstrom-linux-gnueabi-ranlib
arm-angstrom-linux-gnueabi-readelf
arm-angstrom-linux-gnueabi-rmmod
arm-angstrom-linux-gnueabi-size
arm-angstrom-linux-gnueabi-strings
arm-angstrom-linux-gnueabi-strip
$ cd $LINUX_SOURCES
$ cp $ARMEDZED/SlackBuilds/crossed-linux/config-2.6.31.12 .config
$ ARCH=arm CROSS_COMPILE=$CWD/armv5te/bin/arm-angstrom-linux-gnueabi- make oldconfig
$ ARCH=arm CROSS_COMPILE=$CWD/armv5te/bin/arm-angstrom-linux-gnueabi- make
$ ARCH=arm CROSS_COMPILE=$CWD/armv5te/bin/arm-angstrom-linux-gnueabi- make modules_install INSTALL_MOD_PATH=$ARMEDSLACK_ROOT
$ cp arch/arm/boot/zImage $ARMEDSLACK_ROOT/boot
$ cd $ARMEDSLACK_ROOT/boot
$ cat << EOF > image.nfo
Armedslack-current
 EOF
$ cat << EOF > kernel-cmdline
rootfstype=ext3 console=ttyS0,115200n8 console=tty1 noinitrd dyntick=enable
 EOF
$ cat << EOF > boot.cfg
LABEL=Armedslack-current
KERNEL=/boot/zImage
APPEND=console=ttyS0,115200n8 console=tty1 noinitrd dyntick=enable
root=rootfstype=ext3
 EOF
* nano $ROOT/etc/fstab to use /dev/root as device for /
* umount $ROOT
* boot it in Tosa
* if possible make a full installation of Armedslack
* continue by building and installing SlackBuilds/{tosa-idiosyncrasies,tslib,zaurusd}
* enjoy ;)

--------------------------------------

h4. Useful packages from the Outside World that build nice and quiet natively with just ARCH=arm

* SBO
** liblinebreak
** FBReader

* cycojesus (hey that's me :) )
** subtle

--------------------------------------

h4. Todo:

* detail / explain
** OE
*** toolchain
** Wifi
*** try and document (see http://www.omegamoon.com/blog/index.php?entry=entry090823-223248 )
